//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34011
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KlientTest.ServiceGameReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Player", Namespace="http://schemas.datacontract.org/2004/07/Kontrakt")]
    [System.SerializableAttribute()]
    public partial class Player : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NickField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Drawing.Point[] ShapeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double XField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double YField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nick {
            get {
                return this.NickField;
            }
            set {
                if ((object.ReferenceEquals(this.NickField, value) != true)) {
                    this.NickField = value;
                    this.RaisePropertyChanged("Nick");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Drawing.Point[] Shape {
            get {
                return this.ShapeField;
            }
            set {
                if ((object.ReferenceEquals(this.ShapeField, value) != true)) {
                    this.ShapeField = value;
                    this.RaisePropertyChanged("Shape");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double X {
            get {
                return this.XField;
            }
            set {
                if ((this.XField.Equals(value) != true)) {
                    this.XField = value;
                    this.RaisePropertyChanged("X");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Y {
            get {
                return this.YField;
            }
            set {
                if ((this.YField.Equals(value) != true)) {
                    this.YField = value;
                    this.RaisePropertyChanged("Y");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceGameReference.IServiceGame")]
    public interface IServiceGame {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceGame/SendData", ReplyAction="http://tempuri.org/IServiceGame/SendDataResponse")]
        string SendData(KlientTest.ServiceGameReference.Player ja);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceGame/SendData", ReplyAction="http://tempuri.org/IServiceGame/SendDataResponse")]
        System.Threading.Tasks.Task<string> SendDataAsync(KlientTest.ServiceGameReference.Player ja);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceGame/GetData", ReplyAction="http://tempuri.org/IServiceGame/GetDataResponse")]
        KlientTest.ServiceGameReference.Player[] GetData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceGame/GetData", ReplyAction="http://tempuri.org/IServiceGame/GetDataResponse")]
        System.Threading.Tasks.Task<KlientTest.ServiceGameReference.Player[]> GetDataAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceGameChannel : KlientTest.ServiceGameReference.IServiceGame, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceGameClient : System.ServiceModel.ClientBase<KlientTest.ServiceGameReference.IServiceGame>, KlientTest.ServiceGameReference.IServiceGame {
        
        public ServiceGameClient() {
        }
        
        public ServiceGameClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceGameClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceGameClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceGameClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string SendData(KlientTest.ServiceGameReference.Player ja) {
            return base.Channel.SendData(ja);
        }
        
        public System.Threading.Tasks.Task<string> SendDataAsync(KlientTest.ServiceGameReference.Player ja) {
            return base.Channel.SendDataAsync(ja);
        }
        
        public KlientTest.ServiceGameReference.Player[] GetData() {
            return base.Channel.GetData();
        }
        
        public System.Threading.Tasks.Task<KlientTest.ServiceGameReference.Player[]> GetDataAsync() {
            return base.Channel.GetDataAsync();
        }
    }
}
